{"version":3,"sources":["MovieItem.jsx","utils/api.js","MovieTabs.jsx","App.js","serviceWorker.js","index.js"],"names":["MovieItem","props","state","toWatch","this","movie","addMoveToWillWatch","removeMovieWillWatch","className","src","backdrop_path","poster_path","alt","title","vote_average","onClick","setState","removeMovie","bind","React","Component","API_URL","MovieTabs","sort_by","updateSortBy","getNextPage","getPrevPage","handleClick","value","event","getClassLink","App","currentPage","updateMoviesToWatch","moviesWillWatch","console","log","push","updateMovies","movies","filter","item","id","updateMoviesWillWatch","getMovies","prevProps","prevState","getNewPage","fetch","then","response","json","data","results","map","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2726f7e3.chunk.js","sourcesContent":["import React from 'react'\n// import { moviesData } from './MoviesData';\n\n\nclass MovieItem extends React.Component{\n  constructor(props){\n    super(props)\n\n    this.state = {\n      toWatch: false,\n    }\n  }\n  render(){\n    const {movie, addMoveToWillWatch, removeMovieWillWatch} = this.props\n\n    return (\n\n      <div className=\"card\">\n        <img className=\"card-img-top\" \n        src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path || movie.poster_path}`}\n        alt=\"\"\n        />\n      \n        <div className=\"card-body\">\n          <h6 className=\"card-title\">{movie.title}</h6>\n          <div className=\"d-flex justify-content-between aligth-items-center\">\n            <p className=\"mb-0\">Ratting:{movie.vote_average}</p>\n            {this.state.toWatch ?\n            (<button \n            onClick={() => {\n              this.setState({\n                toWatch:false\n              })\n              removeMovieWillWatch(movie)\n\n            }}  \n            className=\"btn btn-success\">\n              Remove Will Watch\n            </button> ) \n          : \n          (<button \n            className=\"btn btn-secondary\"\n            onClick={()=>{\n              this.setState({\n                toWatch: true\n              })\n              addMoveToWillWatch(movie)\n            }}\n            >Add Will Watch\n          </button>)\n          }\n          </div>\n            \n       </div>\n       <button className=\"btn secondary-btn\"\n            onClick={this.props.removeMovie.bind(this, this.props.movie)}>\n            Delete button</button>\n    </div>\n    )\n  }\n}\n\n\nexport default MovieItem","export const API_URL = \"https://api.themoviedb.org/3\";\n\n//export const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\n\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=true&page=1&year=2010\"\n//export const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=100&year=2019\";\n//https://api.themoviedb.org/3/discover/movie?api_key=3f4ca4f3a9750da53450646ced312397&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=true&page=1&year=2010\n\n\nexport const API_KEY_4 =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";","import React from 'react'\nclass MovieTabs extends React.Component{\n \n  render(){\n    const {sort_by, updateSortBy, getNextPage,getPrevPage} = this.props\n    const handleClick = (value) => {\n      return (event) => {\n        updateSortBy(value)\n      }\n    }\n    // const getNextPage = (value) => {\n    //   return (event) => {\n    //     getPage(value++)\n    //   }\n    // }\n    // const getPrevPage = (value) => {\n    //   return (event) => {\n    //     getPage(value--)\n    //   }\n    // }\n    const getClassLink = (value) => {\n      return `nav-link ${sort_by === value ? \"active\" : ''}`\n    }\n    return(\n      <ul className=\"tabs nav nav-pills\">\n      <li className=\"nav-item \">\n        <div \n        onClick={handleClick(\"popularity.desc\")}\n        className={getClassLink(\"popularity.desc\")}>\n          Popularity desc\n        </div>\n      </li>\n      <li className=\"nav-item\">\n        <div \n          onClick={handleClick(\"revenue.desc\")}\n          className={getClassLink(\"revenue.desc\")}>\n          Revenue desc\n        </div>\n      </li>\n      <li className=\"nav-item active\">\n        <div \n          onClick={handleClick(\"vote_avarage.desc\")}         \n          className={getClassLink(\"vote_average.desc\")}>\n          Vote avarage\n        </div>\n      </li>\n        <button \n          onClick={getPrevPage}         \n          className=\"btn btn-success mr-2\">          \n          Next year\n        </button>\n     \n      \n        <button\n        onClick={getNextPage}\n          className=\"btn btn-success \" >\n          Prev y \n        </button>\n      \n    </ul>\n    )\n \n}\n}\n\nexport default MovieTabs","import React from 'react';\nimport './App.css';\nimport MovieItem from './MovieItem'\nimport {API_URL, API_KEY_3, API_KEY_4} from './utils/api'\nimport MovieTabs from './MovieTabs'\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      movies: [],\n      moviesWillWatch: [],\n      sort_by: \"popularity.desc\",\n      currentPage: 2010,    \n    }\n  }\n  componentDidMount(){\n    console.log(\"did mount\")\n    this.getMovies()\n\n  }\n  componentDidUpdate(prevProps, prevState){\n    if(prevState.sort_by !== this.state.sort_by){\n      this.getMovies()\n    }\n    if(prevState.currentPage !== this.state.currentPage){\n      console.log(prevState.currentPage, this.state.currentPage)\n      this.getNewPage()\n    }\n  }\n  getNewPage(){\n    fetch(`${API_URL}/discover/movie?api_key=3f4ca4f3a9750da53450646ced312397&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=100&year=${this.state.currentPage}`)\n    .then((response) => {\n      return response.json()\n    }).then((data) => {\n      this.setState({\n        movies: data.results\n      })\n    })\n  }\n  getMovies(){\n    fetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}`).then((response) => {\n      return response.json()\n      }).then((data) =>{\n        this.setState({\n          movies: data.results\n        })\n      })\n  }\n  updateSortBy = (value) => {\n    this.setState({\n      sort_by: value\n    })\n  }\n  getPrevPage = () => {\n    this.setState({\n      currentPage: this.state.currentPage - 1,\n    });\n  }\n\n  getNextPage = () => {\n    this.setState({\n      currentPage: this.state.currentPage + 1,\n    });\n  }\n  addMoveToWillWatch = (movie) => {\n    const updateMoviesToWatch = [...this.state.moviesWillWatch]\n    console.log(updateMoviesToWatch)\n    updateMoviesToWatch.push(movie)\n\n    this.setState({\n      moviesWillWatch: updateMoviesToWatch\n    })\n  }\n\n  removeMovie = (movie) => {\n    const updateMovies = this.state.movies.filter(function(item){\n      return item.id !== movie.id\n    })\n    console.log(updateMovies  )\n    this.setState({\n      movies: updateMovies\n    })\n  }\n\n  removeMovieWillWatch = (movie) => {\n    const updateMoviesWillWatch = this.state.moviesWillWatch.filter(function(item){\n      return item.id !== movie.id\n    })\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    })\n  }\n \n  render(){\n    return (\n      <div className=\"conteiner\">\n        <div className=\"row\">\n          <div className=\"col-9\">\n            <div className=\"row mb-4 pr-4\">\n              <MovieTabs \n              sort_by={this.state.sort_by}\n              updateSortBy={this.updateSortBy} \n              getPrevPage={this.getPrevPage}\n              getNextPage={this.getNextPage} \n              />\n            </div>\n            <div className=\"row\">\n              {this.state.movies.map((movie) => {\n              return (\n                <div className=\"col-6 mb-4\" key={movie.id}>\n                  <MovieItem  movie={movie} removeMovie={this.removeMovie} \n                  addMoveToWillWatch={this.addMoveToWillWatch}\n                  removeMovieWillWatch={this.removeMovieWillWatch}\n                  />\n                </div>\n              )\n              })}\n            </div>\n          </div>\n          <div className=\"col-3\">\n            <p>Will Watch:\n              {this.state.moviesWillWatch.map((movie) => {\n                return(\n                  <li key={movie.id} className=\"list-group-item\">\n                    <p>{movie.title}</p>\n                  </li>\n                )\n              })}\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}